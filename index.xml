<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>🍓 Oolong Tea</title>
    <link>https://strawberryoolongtea.github.io/</link>
    <description>Recent content on 🍓 Oolong Tea</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 May 2022 19:56:49 +0900</lastBuildDate>
    
	<atom:link href="https://strawberryoolongtea.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My Altar</title>
      <link>https://strawberryoolongtea.github.io/projects/my-altar/</link>
      <pubDate>Sat, 14 May 2022 19:56:49 +0900</pubDate>
      
      <guid>https://strawberryoolongtea.github.io/projects/my-altar/</guid>
      <description>&lt;h2 id=&#34;my-altar&#34;&gt;My Altar&lt;/h2&gt;
&lt;p&gt;나만의 제단 만들기&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Control Flow Statement</title>
      <link>https://strawberryoolongtea.github.io/posts/control-flow-statement/</link>
      <pubDate>Sat, 14 May 2022 19:17:55 +0900</pubDate>
      
      <guid>https://strawberryoolongtea.github.io/posts/control-flow-statement/</guid>
      <description>&lt;h2 id=&#34;control-flow-statement&#34;&gt;Control Flow Statement&lt;/h2&gt;
&lt;p&gt;제어문은 조건에 따라 코드 블록을 실행하거나 반복 실행하도록 하는 등 코드의 실행 흐름을 제어하는 것을 말합니다.&lt;/p&gt;
&lt;h2 id=&#34;block-statement&#34;&gt;Block Statement&lt;/h2&gt;
&lt;p&gt;블록문은 말그대로 코드로 이루어진 블록을 말합니다. 0개 이상의 문을 중괄호로 묶어 표현합니다. 자바스크립트는 블록문을 하나의 실행 단위로 취급합니다. 블록문은 일반적으로 단독으로 사용하기 보다는 제어문이나 함수를 정의할 때 사용합니다.&lt;/p&gt;
&lt;h2 id=&#34;conditional-statement&#34;&gt;Conditional Statement&lt;/h2&gt;
&lt;p&gt;조건문은 조건식의 평가 결과에 따라 코드 블록의 실행을 결정합니다. 조건식은 참인지 거짓인지 Boolean 값으로 평가될 수 있는 표현식을 사용합니다. 자바스크립트에서는 &lt;code&gt;if...else&lt;/code&gt; 문 또는 &lt;code&gt;switch&lt;/code&gt; 문을 사용합니다.&lt;/p&gt;
&lt;h3 id=&#34;ternary-operator&#34;&gt;Ternary Operator&lt;/h3&gt;
&lt;p&gt;대부분의 &lt;code&gt;if...else&lt;/code&gt; 문은 삼항 조건 연산자로 바꿔 쓸 수 있습니다. 만약 조건에 따라 단순히 값을 결정하여 변수에 할당하는 경우에는 삼항 조건 연산자를 사용하는 것이 가독성이 더 좋습니다. 조건에 따라 실행해야 할 내용이 복잡하고 여러 줄의 문이 필요하다면 &lt;code&gt;if...else&lt;/code&gt; 문을 사용하는 것이 가독성이 좋습니다.&lt;/p&gt;
&lt;h3 id=&#34;ifelse-or-switch&#34;&gt;&lt;code&gt;if...else&lt;/code&gt; or &lt;code&gt;switch&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;논리적인 참, 거짓으로 실행할 코드 블록을 결정하는 경우 &lt;code&gt;if...else&lt;/code&gt; 문을 사용합니다. 참, 거짓보다는 다양한 상황&lt;sup&gt;case&lt;/sup&gt;에 따라 실행할 코드 블록을 결정하는 경우에는 &lt;code&gt;switch&lt;/code&gt; 문을 사용합니다.&lt;/p&gt;
&lt;h2 id=&#34;loop-statement&#34;&gt;Loop Statement&lt;/h2&gt;
&lt;p&gt;반복문은 조건식의 결과가 참일 경우에 코드 블록을 실행합니다. 이는 조건식이 거짓이 될 때까지 반복됩니다.&lt;/p&gt;
&lt;h2 id=&#34;break&#34;&gt;Break&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;break&lt;/code&gt; 문은 코드 블록을 탈출합니다. 좀 더 정확히는 레이블 문, 반복문, &lt;code&gt;switch&lt;/code&gt; 문의 코드 블록을 탈출합니다. 이외의 경우에는 &lt;code&gt;SyntaxError&lt;/code&gt;가 발생합니다.&lt;/p&gt;
&lt;h2 id=&#34;continue&#34;&gt;Continue&lt;/h2&gt;
&lt;p&gt;반복문의 코드 블록 실행을 중단하고 반복문의 증감식으로 실행 흐름을 이동시킵니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Javascript Data Type</title>
      <link>https://strawberryoolongtea.github.io/posts/javascript-data-type/</link>
      <pubDate>Fri, 13 May 2022 22:06:27 +0900</pubDate>
      
      <guid>https://strawberryoolongtea.github.io/posts/javascript-data-type/</guid>
      <description>&lt;h2 id=&#34;primitive-type-and-objectivesupreferencesup-type&#34;&gt;Primitive Type and Objective&lt;sup&gt;Reference&lt;/sup&gt; Type&lt;/h2&gt;
&lt;p&gt;자바스크립트는 크게 원시 타입과 객체 타입으로 분류됩니다. 원시 타입은 가장 로우 레벨에서 직접 표현되는 불변성의 데이터를 말합니다. 객체 타입은 식별자로 참조할 수 있는 메모리 상의 데이터를 말합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;원시 타입&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Number&lt;/li&gt;
&lt;li&gt;String&lt;/li&gt;
&lt;li&gt;Boolean&lt;/li&gt;
&lt;li&gt;Undefiend&lt;/li&gt;
&lt;li&gt;Null&lt;/li&gt;
&lt;li&gt;Symbol&lt;/li&gt;
&lt;li&gt;Bigint (책에서는 다루지 않습니다. &lt;a href=&#34;https://developer.mozilla.org/ko/docs/Web/JavaScript/Data_structures#bigint_%ED%83%80%EC%9E%85&#34;&gt;&lt;strong&gt;MDN을 참고&lt;/strong&gt;&lt;/a&gt;하세요.)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;객체 타입: 객체, 함수, 배열 등&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Javascript Variable</title>
      <link>https://strawberryoolongtea.github.io/posts/javascript-variable/</link>
      <pubDate>Thu, 12 May 2022 16:36:24 +0900</pubDate>
      
      <guid>https://strawberryoolongtea.github.io/posts/javascript-variable/</guid>
      <description>&lt;h2 id=&#34;why-do-we-needs-variables&#34;&gt;Why do we needs variables&lt;/h2&gt;
&lt;p&gt;데이터를 사용하기 위해서는 먼저 데이터를 기억해야 할 것입니다. 컴퓨터는 메모리에 데이터를 저장합니다. 메모리는 메모리 셀의 집합체를 말하며 각 메모리 셀은 고유한 주소를 가집니다. 메모리 주소는 데이터를 저장한 공간의 위치를 나타내게 됩니다. 저장된 데이터를 다시 사용하고자 할 때 메모리 주소로 직접 접근하게 되면 치명적인 오류&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;가 발생할 수 있기 때문에 개발자의 직접적인 메모리 제어는 허용되지 않습니다. 이때 변수를 활용해 메모리 주소에 접근할 수 있습니다. 변수는 &lt;strong&gt;데이터를 저장하기 위해 확보한 메모리 공간 자체 또는 그 공간을 식별하기 위한 이름&lt;/strong&gt;을 말합니다.&lt;/p&gt;
&lt;h2 id=&#34;identifier&#34;&gt;Identifier&lt;/h2&gt;
&lt;p&gt;어떤 값을 구별해서 식별할 수 있는 고유한 이름을 식별자라고 하며 변수 또한 식별자입니다. &lt;strong&gt;식별자는 값이 아닌 메모리 주소를 기억하고 있습니다.&lt;/strong&gt; 식별자를 통해 메모리 주소에 접근하고 이 메모리 주소에 저장된 데이터를 사용할 수 있게 됩니다. 식별자는 어떤 걸 가리키는 지 명확할수록 좋습니다. 때문에 변수, 함수, 클래스 등의 식별자 이름을 정할 때에는 사람(개발자)이 한번에 이해하기 쉽도록 이름 짓는 것이 중요합니다.&lt;/p&gt;
&lt;h2 id=&#34;declaration&#34;&gt;Declaration&lt;/h2&gt;
&lt;p&gt;변수를 사용하기 위해서는 선언을 통해 변수를 생성해야 합니다. &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;와 같은 키워드로 변수를 선언하면 자바스크립트 엔진이 변수의 존재를 확인하고 값을 저장하기 위한 메모리 공간을 확보하고 변수 이름과 메모리 주소를 연결해 값을 저장하기 위한 준비를 하게 됩니다.&lt;/p&gt;
&lt;h3 id=&#34;var&#34;&gt;var&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;var&lt;/code&gt; 키워드는 함수 레벨 스코프를 가집니다. 변수를 선언함과 동시에 &lt;code&gt;undefined&lt;/code&gt;를 할당해 초기화합니다.&lt;/p&gt;
&lt;p&gt;자바스크립트 엔진은 변수 선언을 다음과 같은 2단계에 거쳐 수행합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;선언 단계: 변수 이름을 등록해서 자바스크립트 엔진에 변수의 존재를 알립니다.&lt;/li&gt;
&lt;li&gt;초기화 단계: 값을 저장하기 위해 메모리 공간을 확보하고 암묵적으로 undefined를 할당해 초기화합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;var&lt;/code&gt; 키워드를 사용한 변수 선언은 선언 단계와 초기화 단계를 동시에 진행하게 됩니다.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;초기화&lt;sup&gt;Initialization&lt;/sup&gt;란 변수가 선언되고 최초의 값을 할당하는 것을 말합니다. 메모리 공간은 임의로 사용되기 때문에 초기화를 거치지 않으면 이전에 사용한 쓰레기 값&lt;sup&gt;garbage value&lt;/sup&gt;이 들어있을 수 있습니다. 때문에 undefined로 암묵적으로 초기화를 진행하면 garbage value를 사용할 위험으로부터 안전합니다.&lt;/p&gt;
&lt;p&gt;선언하지 않은 식별자에 접근하면 &lt;a href=&#34;https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError&#34;&gt;&lt;strong&gt;ReferenceError&lt;/strong&gt;&lt;/a&gt;가 발생합니다.&lt;/p&gt;
&lt;h2 id=&#34;hoisting&#34;&gt;Hoisting&lt;/h2&gt;
&lt;h2 id=&#34;assignment&#34;&gt;Assignment&lt;/h2&gt;
&lt;h2 id=&#34;allocation&#34;&gt;Allocation&lt;/h2&gt;
&lt;h2 id=&#34;naming-conventions&#34;&gt;Naming Conventions&lt;/h2&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;어떤 치명적인 결과가 생기는 걸까&amp;hellip;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>CSS Flexbox</title>
      <link>https://strawberryoolongtea.github.io/posts/css-flex-system/</link>
      <pubDate>Wed, 04 May 2022 15:24:40 +0900</pubDate>
      
      <guid>https://strawberryoolongtea.github.io/posts/css-flex-system/</guid>
      <description>&lt;p&gt;CSS 플렉스 박스 레이아웃 모듈은&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://css-tricks.com/snippets/css/a-guide-to-flexbox/&#34;&gt;CSS Tricks Reference&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Debate Ducks</title>
      <link>https://strawberryoolongtea.github.io/projects/projects/</link>
      <pubDate>Mon, 02 May 2022 19:16:14 +0900</pubDate>
      
      <guid>https://strawberryoolongtea.github.io/projects/projects/</guid>
      <description>&lt;h2 id=&#34;debate-ducks&#34;&gt;DEBATE DUCKS&lt;/h2&gt;
&lt;p&gt;실시간 토론 플랫폼&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HTML Canvas</title>
      <link>https://strawberryoolongtea.github.io/posts/html-cheat-sheet/</link>
      <pubDate>Mon, 02 May 2022 11:09:24 +0900</pubDate>
      
      <guid>https://strawberryoolongtea.github.io/posts/html-cheat-sheet/</guid>
      <description>&lt;h2 id=&#34;html5-canvas&#34;&gt;HTML5 Canvas&lt;/h2&gt;
&lt;h3 id=&#34;canvas-api&#34;&gt;Canvas API&lt;/h3&gt;
&lt;p&gt;Canvas API는 자바스크립트와 &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; 엘리먼트를 이용해 애니메이션, 게임 그래픽, 데이터 시각화, 사진 조작 및 실시간 비디오 처리와 같은 그래픽을 그리기 위완 수단을 제공합니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Javascript And Browser</title>
      <link>https://strawberryoolongtea.github.io/posts/javascript-and-browser/</link>
      <pubDate>Sun, 01 May 2022 12:52:10 +0900</pubDate>
      
      <guid>https://strawberryoolongtea.github.io/posts/javascript-and-browser/</guid>
      <description>&lt;h2 id=&#34;rendering-process-of-browser&#34;&gt;Rendering Process Of Browser&lt;/h2&gt;
&lt;p&gt;브라우저는 다음과 같은 과정을 통해 렌더링&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;을 수행합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;브라우저는 렌더링에 필요한 리소스(HTML, CSS, 자바스크립트)를 서버에 요청하고 응답을 받습니다.&lt;/li&gt;
&lt;li&gt;브라우저의 렌더링 엔진은 응답받은 HTML과 CSS를 파싱&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;하여 DOM과 CSSOM을 생성합니다.&lt;/li&gt;
&lt;li&gt;DOM과 CSSOM을 결합하여 렌더 트리를 생성합니다.&lt;/li&gt;
&lt;li&gt;브라우저의 자바스크립트 엔진은 자바스크립트를 파싱하여 &lt;a href=&#34;https://yceffort.kr/2021/05/ast-for-javascript&#34;&gt;AST&lt;/a&gt;를 생성하고 바이트코드로 실행합니다.&lt;/li&gt;
&lt;li&gt;이때 자바스크립트는 DOM API를 통해 DOM이나 CSSOM을 변경할 수 있습니다.&lt;/li&gt;
&lt;li&gt;변경된 DOM과 CSSOM은 다시 렌더 트리로 결합됩니다.&lt;/li&gt;
&lt;li&gt;생성된 렌더 트리를 기반으로 레이아웃을 계산하고 브라우저 화면에 HTML 요소를 페인팅합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;request--response&#34;&gt;Request &amp;amp; Response&lt;/h2&gt;
&lt;p&gt;서버에 리소스를 요청하기 위해 브라우저는 주소창을 제공합니다. 브라우저의 주소창에 URL을 입력하면 URL의 호스트 이름이 DNS를 통해 IP 주소로 변환되고 이 IP 주소를 갖는 서버에게 요청을 전송합니다.&lt;/p&gt;
&lt;h3 id=&#34;uri-url-urn&#34;&gt;URI, URL, URN&lt;/h3&gt;
&lt;p&gt;URL&lt;sup&gt;Uniform Resource Locator&lt;/sup&gt;은 서버가 제공되는 환경에 존재하는 파일의 위치를 말합니다.&lt;/p&gt;
&lt;!-- `https://www.example.com` --&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;렌더링은 HTML, CSS, 자바스크립트로 작성된 문서를 파싱하여 브라우저에 시각적으로 출력하는 것을 말합니다.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;파싱은 프로그래밍 언어로 작성된 텍스트 문서를 해석하고 실행하기 위해 텍스트 문서의 문자열을 토큰으로 분해하고 토큰에 문법적 의미와 구조를 반영하여 트리 구조의 자료구조인 파스 트리를 생성하는 일련의 과정을 말합니다. 여기서 토큰은 문법적으로 더는 나눌 수 없는 코드의 기본 요소를 의미합니다. 일반적으로 파싱이 완료된 후에 파스 트리를 기반으로 중간 언어인 &lt;a href=&#34;https://ko.wikipedia.org/wiki/%EB%B0%94%EC%9D%B4%ED%8A%B8%EC%BD%94%EB%93%9C&#34;&gt;바이트코드&lt;/a&gt;를 생성하고 실행합니다.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>https://strawberryoolongtea.github.io/about/</link>
      <pubDate>Sun, 01 May 2022 10:54:30 +0900</pubDate>
      
      <guid>https://strawberryoolongtea.github.io/about/</guid>
      <description>&lt;h1 id=&#34;hello-_new-world_&#34;&gt;Hello &lt;em&gt;new world!&lt;/em&gt;&lt;/h1&gt;
&lt;p&gt;☪︎ A developer who want to break the existing world ✦&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://strawberryoolongtea.github.io/profile.jpg&#34; alt=&#34;my profile&#34;&gt;&lt;/p&gt;
&lt;p&gt;시각디자인 전공 및 웹디자인 실무의 경험을 토대로 사용자 중심의 섬세하고 감각적인 UI를 기술적으로 구현하기 위해 고민하고 다양한 사람들과의 협업을 통해 더 나은 가치를 전달할 수 있는 일에 최선을 다하는 개발자 김수빈입니다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;more-about-me&#34;&gt;More About Me&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;공감을 잘합니다. 다른 사람의 감정을 이해하려고 애쓰며 배려 중심의 의사소통을 중시합니다.&lt;/li&gt;
&lt;li&gt;세상에 대해 관대하고 수용적이며 유연한 시각으로 대상을 관찰하고 사고합니다.&lt;/li&gt;
&lt;li&gt;다양한 생각을 존중하고 새로운 것에 대한 거부감이 없으며 쉽게 적응합니다.&lt;/li&gt;
&lt;li&gt;목표를 위해 수단과 방법을 가리지 않습니다. 원하는 것을 이루기까지 포기하지 않습니다.&lt;/li&gt;
&lt;li&gt;즉흥적이고 감성적이지만 이성적이고 논리적인 동료의 말을 귀담아 듣습니다.&lt;/li&gt;
&lt;li&gt;타인과 상황에 대해 인정하고 배울 점이 될 만한 부분을 발견하려고 합니다.&lt;/li&gt;
&lt;li&gt;규칙적인 웨이트 트레이닝으로 사소한 스트레스를 해소하고 정신을 갈고 닦습니다.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Hugo Post Guide</title>
      <link>https://strawberryoolongtea.github.io/posts/post-guide/</link>
      <pubDate>Sat, 30 Apr 2022 23:14:55 +0900</pubDate>
      
      <guid>https://strawberryoolongtea.github.io/posts/post-guide/</guid>
      <description>&lt;h2 id=&#34;start-hugo-blog&#34;&gt;Start Hugo Blog&lt;/h2&gt;
&lt;p&gt;휴고 블로그를 만드는 방법을 안내합니다.
휴고 프로젝트를 생성하는 방법부터 콘텐츠는 어떻게 추가하는지 커스터마이징은 어떻게 하는지 이야기합니다.&lt;/p&gt;
&lt;p&gt;자세한 사항은 &lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34;&gt;&lt;strong&gt;Hugo Quick Start&lt;/strong&gt;&lt;/a&gt; 및 &lt;a href=&#34;https://gohugo.io/documentation/&#34;&gt;&lt;strong&gt;Hugo Documentation&lt;/strong&gt;&lt;/a&gt;를 확인하세요.&lt;/p&gt;
&lt;p&gt;아래부터 이어지는 방법론은 Mac 환경 및 &lt;a href=&#34;https://github.com/heyeshuang/hugo-theme-tokiwa&#34;&gt;&lt;strong&gt;Tokiwa&lt;/strong&gt;&lt;/a&gt; 테마가 적용된 블로그를 기준으로 작성되었습니다. 윈도우 환경이나 다른 테마의 사용 방법과는 일부 차이가 있을 수 있습니다.&lt;/p&gt;
&lt;h3 id=&#34;install-hugo&#34;&gt;Install Hugo&lt;/h3&gt;
&lt;p&gt;패키지 관리 시스템인 Homebrew를 통해 Hugo 패키지를 설치합니다.&lt;/p&gt;
&lt;p&gt;Homebrew 외에 다양한 방법들이 &lt;a href=&#34;https://gohugo.io/getting-started/installing/#quick-install&#34;&gt;&lt;strong&gt;여기&lt;/strong&gt;&lt;/a&gt;에 있습니다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;create-new-project&#34;&gt;Create New Project&lt;/h3&gt;
&lt;p&gt;새로운 휴고 프로젝트를 생성합니다. 여기서는 &lt;code&gt;test-blog&lt;/code&gt; 라는 프로젝트를 만들겠습니다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;hugo new site {project name}
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new site test-blog
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;다음과 같은 구조의 폴더가 생성됩니다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;.
├── archetypes
│   └── default.md
├── config.toml
├── content
├── data
├── layouts
├── public
├── static
└── themes
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;새롭게 생성한 프로젝트의 루트에서 깃을 초기화하고 원하는 테마의 &lt;a href=&#34;https://git-scm.com/book/en/v2/Git-Tools-Submodules&#34;&gt;&lt;strong&gt;submodule&lt;/strong&gt;&lt;/a&gt;을 추가합니다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd {project name}
git init
git submodule add {git repository} {path}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;휴고 테마는 &lt;a href=&#34;https://themes.gohugo.io/&#34;&gt;&lt;strong&gt;themes.gohugo.io&lt;/strong&gt;&lt;/a&gt;에서 확인할 수 있습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd test-blog
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git submodule add https://github.com/heyeshuang/hugo-theme-tokiwa.git themes/hugo-theme-tokiwa
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;서브모듈을 추가하고 나면 &lt;code&gt;.gitmodules&lt;/code&gt; 파일이 다음과 같이 추가된 것을 확인할 수 있습니다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[submodule &amp;#34;themes/hugo-theme-tokiwa&amp;#34;]
	path = themes/hugo-theme-tokiwa
	url = https://github.com/heyeshuang/hugo-theme-tokiwa.git
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;configure-blog&#34;&gt;Configure Blog&lt;/h3&gt;
&lt;p&gt;프로젝트의 루트에서 &lt;code&gt;config.toml&lt;/code&gt; 파일을 확인할 수 있습니다. 이 파일에서 프로젝트와 관련한 다양한 설정을 할 수 있습니다. 자세한 방법은 &lt;a href=&#34;https://gohugo.io/getting-started/configuration/&#34;&gt;&lt;strong&gt;여기&lt;/strong&gt;&lt;/a&gt;를 확인하세요.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;baseURL = &amp;#39;http://example.org/&amp;#39;
languageCode = &amp;#39;en-us&amp;#39;
title = &amp;#39;My New Hugo Site&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;baseURL&lt;/code&gt;은 루트의 경로를 나타냅니다. 프로젝트에서 다음과 같이 사용됩니다. &lt;a href=&#34;https://golangkorea.github.io/post/hugo-intro/content-basic/&#34;&gt;&lt;strong&gt;관련한 글&lt;/strong&gt;&lt;/a&gt;을 읽어보면 도움이 될 수 있습니다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;|-----baseURL-----|section|
https://example.org/posts
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;languageCode&lt;/code&gt;는 &lt;a href=&#34;https://gohugo.io/getting-started/configuration/#languagecode&#34;&gt;&lt;strong&gt;RFC 5646에 정의된 언어 태그&lt;/strong&gt;&lt;/a&gt;로 프로젝트에 사용될 언어의 &lt;a href=&#34;https://github.com/gohugoio/hugo/issues/349&#34;&gt;&lt;strong&gt;RSS Language Code를 생성할 때 사용&lt;/strong&gt;&lt;/a&gt;됩니다.
RSS Language Codes는 &lt;a href=&#34;https://www.rssboard.org/rss-language-codes&#34;&gt;&lt;strong&gt;여기&lt;/strong&gt;&lt;/a&gt;에서 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;title&lt;/code&gt;에 원하는 프로젝트 제목을 설정할 수 있습니다.&lt;/p&gt;
&lt;p&gt;원하는 테마에 맞게 다음과 같이 설정합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;baseURL &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://example.org/&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;languageCode &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ko&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test-blog&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;theme &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hugo-theme-tokiwa&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;create-new-post&#34;&gt;Create New Post&lt;/h2&gt;
&lt;p&gt;프로젝트에 새로운 포스트를 생성해 보겠습니다. 터미널의 루트 경로에서 다음과 같이 입력합니다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;hugo new posts/myFirstPost.md
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;content&lt;/code&gt; 폴더 하위로 다음과 같이 새로운 콘텐츠가 생성됩니다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;.
└── posts
    └── myFirstPost.md
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# My First Post Front Matter from myFirstPost.md file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MyFirstPost&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date: 2022-05-12T16:01:43+09:00
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;draft: true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;.md&lt;/code&gt; 파일을 생성할 때 &lt;code&gt;my-second-post.md&lt;/code&gt;로 작성하면 &lt;code&gt;-&lt;/code&gt; 기호를 기준으로 띄어쓰기가 적용된 타이틀의 &lt;a href=&#34;https://gohugo.io/content-management/front-matter&#34;&gt;&lt;strong&gt;Front Matter&lt;/strong&gt;&lt;/a&gt;가 생성됩니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# My Second Post Front Matter from my-second-post.md file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;My Second Post&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date: 2022-05-12T16:06:17+09:00
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;draft: true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Front Matter 아래로 마크다운 문법을 활용해 원하는 내용으로 자유롭게 작성하세요. 문법이 헷갈린다면 &lt;a href=&#34;https://www.markdownguide.org/cheat-sheet/&#34;&gt;&lt;strong&gt;Cheat Sheet&lt;/strong&gt;&lt;/a&gt;을 확인하세요.&lt;/p&gt;
&lt;h2 id=&#34;start-hugo-server&#34;&gt;Start Hugo Server&lt;/h2&gt;
&lt;h2 id=&#34;my-boilerplate&#34;&gt;My Boilerplate&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# default&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Javascript Cheat Sheet&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date: 2022-05-01T12:52:10+09:00
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;draft: true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# front matter boilerplate&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;author: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;strawberry oolong tea&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;description: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;categories: &lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tags: &lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aliases: &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;migrate-from-jekyl&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;toc: true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>