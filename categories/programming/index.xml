<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Strawberry ウーロン茶</title>
    <link>https://strawberryoolongtea.github.io/categories/programming/</link>
    <description>Recent content in Programming on Strawberry ウーロン茶</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 May 2022 15:24:40 +0900</lastBuildDate>
    
	<atom:link href="https://strawberryoolongtea.github.io/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CSS Flexbox</title>
      <link>https://strawberryoolongtea.github.io/posts/css-flex-system/</link>
      <pubDate>Wed, 04 May 2022 15:24:40 +0900</pubDate>
      
      <guid>https://strawberryoolongtea.github.io/posts/css-flex-system/</guid>
      <description>&lt;p&gt;본 글은 &lt;a href=&#34;https://css-tricks.com/&#34;&gt;css-tricks.com&lt;/a&gt;의 &lt;a href=&#34;https://css-tricks.com/snippets/css/a-guide-to-flexbox/&#34;&gt;A Complete Guide to Flexbox&lt;/a&gt;의 내용을 번역하고 &lt;a href=&#34;https://www.w3schools.com/&#34;&gt;w3schools.com&lt;/a&gt;의 &lt;a href=&#34;https://www.w3schools.com/css/css3_flexbox.asp&#34;&gt;CSS Flexbox&lt;/a&gt;의 내용을 참고하여 덧붙였습니다.&lt;/p&gt;
&lt;h2 id=&#34;how-to-design-layout-for-website&#34;&gt;How to design layout for Website&lt;/h2&gt;
&lt;p&gt;CSS Flexbox 레이아웃 모듈 이전에는 4가지의 레이아웃 방법이 있었습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;웹 페이지의 섹션을 나누는 블록 모드&lt;/li&gt;
&lt;li&gt;텍스트를 위한 인라인 모드&lt;/li&gt;
&lt;li&gt;2차원 테이블 데이터를 위한 테이블 모드&lt;/li&gt;
&lt;li&gt;요소의 명시적인 위치를 이용하는 포지션 모드&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;플렉스 박스 레이아웃 모듈은 &lt;code&gt;float&lt;/code&gt; 속성을 이용하거나 포지셔닝하지 않고도 반응형의 유연한 레이아웃 구조를 디자인하기 쉽게 해줍니다.&lt;/p&gt;
&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;CSS 플렉스 박스 레이아웃 모듈은 컨테이너 내의 아이템들을 정렬하고 분배하는 데에 보다 효율적인 방식을 제공합니다.&lt;/p&gt;
&lt;p&gt;플렉스 레이아웃의 메인 아이디어는, 사용 가능한 영역을 최대한 효율적으로 채우기 위해 컨테이너에게 아이템의 너비 및 높이를 변경할 수 있는 기능을 제공한다는 것입니다. 플렉스 컨테이너는 사용 가능한 영역을 채우기 위해 아이템을 확장하거나 오버플로우를 방지하기 위해 아이템을 축소합니다.&lt;/p&gt;
&lt;p&gt;가장 중요한 점은 수직 기반인 블록이나 수평 기반인 인라인과 달리 방향에 구애받지 않는다는 것입니다.&lt;/p&gt;
&lt;p&gt;한편, 플렉스 레이아웃은 페이지 단위 내에서는 잘 작동할 수 있지만 규모가 크거나 복잡한 애플리케이션을 지원하기에는 유연성이 부족합니다. 때문에 대규모 레이아웃의 경우에는 &lt;a href=&#34;https://css-tricks.com/snippets/css/complete-guide-grid/&#34;&gt;그리드&lt;/a&gt;가 더 유용할 수 있습니다.&lt;/p&gt;
&lt;h2 id=&#34;basics-and-terminology&#34;&gt;Basics and terminology&lt;/h2&gt;
&lt;p&gt;CSS 플렉스 박스는 단일 속성이 아닌 하나의 전체적인 모듈이기 때문에, 모듈 내의 모든 속성을 비롯해 많은 것을 포함합니다. 속성들의 일부는 부모 요소인 &lt;code&gt;flex container&lt;/code&gt;에 설정하거나 또 다른 일부는 자식 요소인 &lt;code&gt;flex items&lt;/code&gt;에 속성을 부여합니다.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HTML Canvas</title>
      <link>https://strawberryoolongtea.github.io/posts/html-cheat-sheet/</link>
      <pubDate>Mon, 02 May 2022 11:09:24 +0900</pubDate>
      
      <guid>https://strawberryoolongtea.github.io/posts/html-cheat-sheet/</guid>
      <description>&lt;h2 id=&#34;html5-canvas&#34;&gt;HTML5 Canvas&lt;/h2&gt;
&lt;h3 id=&#34;canvas-api&#34;&gt;Canvas API&lt;/h3&gt;
&lt;p&gt;Canvas API는 자바스크립트와 &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; 엘리먼트를 이용해 애니메이션, 게임 그래픽, 데이터 시각화, 사진 조작 및 실시간 비디오 처리와 같은 그래픽을 그리기 위완 수단을 제공합니다.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>